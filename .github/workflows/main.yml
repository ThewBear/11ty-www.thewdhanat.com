on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: npm ci
  #     - run: npm test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run lint

  build-self-hosted:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build
      - run: "[ -f _site/index.html ]"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build
      - run: "[ -f _site/index.html ]"

  deployPullRequest:
    if: github.event_name	== 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir .vercel
          echo $VERCEL_PROJECT > .vercel/project.json
          npx vercel --token $VERCEL_TOKEN > previewUrl.txt
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT: ${{ secrets.VERCEL_PROJECT }}
      - uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview : ${require('fs').readFileSync('previewUrl.txt', 'utf8')} ðŸš€`
            })

  deploy:
    if: github.event_name	== 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir .vercel
          echo $VERCEL_PROJECT > .vercel/project.json
          npx vercel --token $VERCEL_TOKEN > previewUrl.txt
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT: ${{ secrets.VERCEL_PROJECT }}
      - uses: actions/github-script@v3
        with:
          script: |
            const { data: deployment } = await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'preview'
            });
            github.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              log_url: require('fs').readFileSync('previewUrl.txt', 'utf8'),
              mediaType: {
                previews: "ant-man"
              }
            });

  deployToProduction:
    if: github.event_name	== 'push' && github.ref == 'refs/heads/main' || github.event_name	== 'schedule'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir .vercel
          echo $VERCEL_PROJECT > .vercel/project.json
          npx vercel --prod --token $VERCEL_TOKEN > previewUrl.txt
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT: ${{ secrets.VERCEL_PROJECT }}
      - uses: actions/github-script@v3
        with:
          script: |
            const { data: deployment } = await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
            });
            github.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id,
              state: 'success',
              log_url: require('fs').readFileSync('previewUrl.txt', 'utf8'),
              mediaType: {
                previews: "ant-man"
              }
            });
